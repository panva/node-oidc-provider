name: Continuous Integration

on:
  push:
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'
  schedule:
    - cron:  0 9 * * 1-5

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - run: npx panva/npm-install-retry
      - run: npm run lint
      - run: npm run lint-ts

  test:
    name: Node Tests + Coverage
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version:
          - 10.13.0
          - 10
          - 12.0.0
          - 12
          - 13.7.0
          - 13
          - 14.0.0
          - 14
        os:
          - ubuntu-latest
          - windows-latest
          - macOS-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npx panva/npm-install-retry
      - run: npm run ci
      - env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        run: npx codecov

  oidc-conformance:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        script:
          - code
          - id_token
          - id_token+token
          - code+id_token
          - code+id_token+token
          - code+token
    steps:
      - run: |
          docker pull panvafs/oidc-certification-op-ci
          docker run -d -p "60000-60010:60000-60010" panvafs/oidc-certification-op-ci
          while ! curl -sk https://127.0.0.1:60000 >/dev/null; do sleep 2; done
      - uses: actions/checkout@master
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - run: npx panva/npm-install-retry
      - run: node certification/docker &
        env:
          ISSUER: https://172.17.0.1:3000
          NODE_TLS_REJECT_UNAUTHORIZED: 0
      - run: git clone https://github.com/panva/oidc-provider-conformance-tests.git
      - env:
          ISSUER: https://172.17.0.1:3000
          NODE_TLS_REJECT_UNAUTHORIZED: 0
          TEST_HOSTNAME: 127.0.0.1
        run: |
            cd oidc-provider-conformance-tests
            git checkout local-certification
            npx panva/npm-install-retry
            npm run ${{ matrix.script }}

  fapi-conformance:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - env:
          MAVEN_CACHE: ./m2
        run: |
          git clone https://gitlab.com/openid/conformance-suite.git
          cd conformance-suite
          git checkout release-v3.3.1
          sed -i -e 's/localhost/localhost.emobix.co.uk/g' src/main/resources/application.properties
          sed -i -e 's/-B/-B -DskipTests=true/g' builder-compose.yml
          docker-compose -f builder-compose.yml run builder
          docker-compose -f docker-compose-dev.yml up -d
          while ! curl -skfail https://localhost.emobix.co.uk:8443/api/runner/available >/dev/null; do sleep 2; done
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - run: npx panva/npm-install-retry
      - run: node certification/fapi &
        env:
          ISSUER: https://172.17.0.1:3000
          NODE_TLS_REJECT_UNAUTHORIZED: 0
          SUITE_BASE_URL: https://localhost.emobix.co.uk:8443
          NODE_OPTIONS: --tls-cipher-list="ECDHE-ECDSA-AES128-GCM-SHA256 ECDHE-ECDSA-AES256-GCM-SHA384 ECDHE-RSA-AES128-GCM-SHA256 ECDHE-RSA-AES256-GCM-SHA384"
      - run: |
          sed -i -e 's/mtls.fapi.panva.cz/172.17.0.1:3000/g' certification/fapi/mtls.json
          sed -i -e 's/fapi.panva.cz/172.17.0.1:3000/g' certification/fapi/mtls.json
          sed -i -e 's/mtls.fapi.panva.cz/172.17.0.1:3000/g' certification/fapi/pkjwt.json
          sed -i -e 's/fapi.panva.cz/172.17.0.1:3000/g' certification/fapi/pkjwt.json
      - name: Run private_key_jwt variant
        run: npx mocha --delay --timeout 0 --retries 2 certification/fapi/runner
        env:
          PLAN_NAME: fapi-rw-id2-test-plan
          VARIANT: '{"client_auth_type":"private_key_jwt","fapi_profile":"plain_fapi","fapi_response_mode":"plain_response"}'
          CONFIGURATION: ./certification/fapi/pkjwt.json
          SUITE_BASE_URL: https://localhost.emobix.co.uk:8443
          NODE_TLS_REJECT_UNAUTHORIZED: 0
      - name: Run mtls variant
        run: npx mocha --delay --timeout 0 --retries 2 certification/fapi/runner
        env:
          PLAN_NAME: fapi-rw-id2-test-plan
          VARIANT: '{"client_auth_type":"mtls","fapi_profile":"plain_fapi","fapi_response_mode":"plain_response"}'
          CONFIGURATION: ./certification/fapi/mtls.json
          SUITE_BASE_URL: https://localhost.emobix.co.uk:8443
          NODE_TLS_REJECT_UNAUTHORIZED: 0
      - name: Run private_key_jwt-jarm variant
        run: npx mocha --delay --timeout 0 --retries 2 certification/fapi/runner
        env:
          PLAN_NAME: fapi-rw-id2-test-plan
          VARIANT: '{"client_auth_type":"private_key_jwt","fapi_profile":"plain_fapi","fapi_response_mode":"jarm"}'
          CONFIGURATION: ./certification/fapi/pkjwt.json
          SUITE_BASE_URL: https://localhost.emobix.co.uk:8443
          NODE_TLS_REJECT_UNAUTHORIZED: 0
      - name: Run mtls-jarm variant
        run: npx mocha --delay --timeout 0 --retries 2 certification/fapi/runner
        env:
          PLAN_NAME: fapi-rw-id2-test-plan
          VARIANT: '{"client_auth_type":"mtls","fapi_profile":"plain_fapi","fapi_response_mode":"jarm"}'
          CONFIGURATION: ./certification/fapi/mtls.json
          SUITE_BASE_URL: https://localhost.emobix.co.uk:8443
          NODE_TLS_REJECT_UNAUTHORIZED: 0

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/master' && github.repository == 'panva/node-oidc-provider'
    runs-on: ubuntu-latest
    needs:
      - test
      - oidc-conformance
      - fapi-conformance
    strategy:
      matrix:
        app:
          - radiant-refuge-93411
          - powerful-cove-31049
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.x
      - run: gem install dpl-heroku -v 1.10.14
      - run: dpl --provider=heroku --strategy=api --api-key=${{ secrets.HEROKU_AUTH_TOKEN }} --app=${{ matrix.app }}
